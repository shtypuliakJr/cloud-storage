version: '3.8'
services:

  app-file-service:
    build:
      context: ../file-service
      dockerfile: ./docker/Dockerfile
      args:
        VERSION: undefined
    depends_on:
      - db-file-service
      - cloud-storage-minio
    ports:
      - "8010:8080"
      - "6001:6001"
    environment:
      AWS_ACCESS_KEY_ID: dummy_key
      AWS_SECRET_ACCESS_KEY: dummy_secret
      AWS_DEFAULT_REGION: us-east-1
      ENV_VAR_NAME: ${COMPOSE_PROJECT_NAME}
    networks:
      - ${NETWORK_NAME}

  db-file-service:
    image: postgres:12.4-alpine
    container_name: db-file-service
    hostname: db-file-service
    volumes:
      - mpgdata:/var/lib/postgresql/data-postgres-file-service
    expose:
      - 5440
    ports:
      - "5440:5440"
    command: -p 5440
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: file-service_db
      ENV_VAR_NAME: ${COMPOSE_PROJECT_NAME}
    networks:
      - ${NETWORK_NAME}

  cloud-storage-minio:
    image: minio/minio:RELEASE.2023-03-09T23-16-13Z
    container_name: cs-minio
    hostname: cs-minio
    volumes:
      - ./minio/s3:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    entrypoint: sh
    command: -c 'mkdir -p /data/cs-dev && minio server /data --console-address ":9001"'
    environment:
      MINIO_ACCESS_KEY: dummy_key
      MINIO_SECRET_KEY: dummy_secret
      ENV_VAR_NAME: ${COMPOSE_PROJECT_NAME}
    networks:
      - ${NETWORK_NAME}

volumes:
  mpgdata:
    driver: local
networks:
  cs_network:
    driver: bridge